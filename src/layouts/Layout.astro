---
import '../styles/global.css';
import '../styles/transitions.css';
import '../styles/critical.css';
import { ViewTransitions } from 'astro:transitions';

export interface Props {
  title: string;
  description?: string;
}

const { 
  title = "Chadix - AI-Powered SEO Platform", 
  description = "Modern SaaS landing page template with responsive design and modular sections."
} = Astro.props;
---

<!doctype html>
<html lang="en" x-data="{ darkMode: localStorage.getItem('darkMode') === 'true' }" x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))" :class="{ 'dark': darkMode }">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    
    <!-- Preconnect to font domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    
    <!-- Preload critical fonts with font-display: swap -->
    <link rel="preload" href="https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZ9hiA.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="https://fonts.gstatic.com/s/lexend/v17/wlpwgwvFAVdoq2_v9KQU4Wc.woff2" as="font" type="font/woff2" crossorigin>
    
    <!-- Asynchronously load the full font stylesheet -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Lexend:wght@400;500;600;700&display=swap">
    
    <!-- Inline critical CSS -->
    <style is:inline>
      /* Critical font definitions */
      @font-face {
        font-family: 'Inter';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZ9hiA.woff2) format('woff2');
      }
      
      @font-face {
        font-family: 'Lexend';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/lexend/v17/wlpwgwvFAVdoq2_v9KQU4Wc.woff2) format('woff2');
      }
      
      /* Critical layout styles */
      body {
        margin: 0;
        padding: 0;
        font-family: 'Inter', sans-serif;
        -webkit-text-size-adjust: 100%;
        -webkit-font-smoothing: antialiased;
      }
      
      h1, h2, h3, h4, h5, h6 {
        font-family: 'Lexend', sans-serif;
        margin: 0 0 1rem;
      }
      
      /* Ensure text is visible while fonts are loading */
      .hero-section h1 {
        opacity: 1 !important;
        transform: translateY(0) !important;
        transition: none !important;
      }
    </style>
    
    <ViewTransitions />
  </head>
  <body class="antialiased bg-white dark:bg-secondary-950 text-secondary-900 dark:text-secondary-100 transition-colors duration-300">
    <div id="page-wrapper" class="page-transition-wrapper">
      <slot />
    </div>
    
    <!-- Inline critical JavaScript -->
    <script is:inline>
      // Check for user preference
      if (localStorage.getItem('darkMode') === null) {
        // Check system preference
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          localStorage.setItem('darkMode', 'true');
          document.documentElement.classList.add('dark');
        } else {
          localStorage.setItem('darkMode', 'false');
        }
      }
      
      // Add priority hints to LCP elements
      document.addEventListener('DOMContentLoaded', function() {
        const heroHeading = document.querySelector('.hero-section h1');
        if (heroHeading) {
          heroHeading.setAttribute('fetchpriority', 'high');
        }
      });
    </script>
    
    <!-- Handle page transitions -->
    <script defer>
      document.addEventListener('astro:page-load', () => {
        // This runs on initial page load and after each navigation
        const pageWrapper = document.getElementById('page-wrapper');
        if (pageWrapper) {
          pageWrapper.classList.add('page-loaded');
        }
      });

      document.addEventListener('astro:before-swap', () => {
        // This runs before the new page content is swapped in
        const pageWrapper = document.getElementById('page-wrapper');
        if (pageWrapper) {
          pageWrapper.classList.remove('page-loaded');
        }
      });
    </script>
    
    <!-- Defer non-critical JavaScript -->
    <script defer src="../scripts/transitions.js"></script>
  </body>
</html>
